version: "2"
services:

### Container Base de données mysql
  sql:
    build: './SQL'
#    image: effid/sql:latest
    ports:
    - 3306:3306
    environment:
    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    - MYSQL_USER=${MYSQL_USERNAME}
    - MYSQL_PASSWORD=${MYSQL_USER_PASSWORD}
    - MYSQL_DATABASE=${MYSQL_DATABASE}
    - MYSQL_DATA_DIR=/var/lib/mysql
    - MYSQL_RUN_DIR=/run/mysqld
    - MYSQL_LOG_DIR=/var/log/mysql
    networks:
    - backend

### API
  api:
    build: './API'
#    image: effid/api:latest
    ports:
    - 10000:10000
    depends_on:
    - "sql"
    environment:
    - HOST=database
    - USER=${MYSQL_USERNAME}
    - PASSWORD=${MYSQL_USER_PASSWORD}
    - DATABASE=${MYSQL_DATABASE}
    networks:
    - frontend
    - backend

### Container portail http
  web:
    build: './WEB'
#    image: effid/web
    ports:
    - 80:80
    - 443:443
    networks:
    - frontend
    - backend

  # netdata:
  #   image: netdata/netdata
  #   ports:
  #     - 19999:19999
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro

### Container supervision grafana
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   restart: always
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - effid
  #   volumes:
  #     - grafana-volume:/var/lib/grafana

### Container base InfluxDB
  # influxdb:
  #   image: influxdb
  #   container_name: influxdb
  #   restart: always
  #   ports:
  #     - 8086:8086
  #   networks:
  #     - effid
  #   volumes:
  #     - influxdb-volume:/var/lib/influxdb

# Reseaux de communication entre containers
networks:
  backend:
  frontend:

# Volumes de stockage de données des containers
# volumes:
#   grafana-volume:
#     external: true
#   influxdb-volume:
#     external: true
